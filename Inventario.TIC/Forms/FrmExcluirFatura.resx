<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAA
        AAAAAAABBQUyKQ4MZHETEiM2Pz9BVEVFSFk6OkVhFhRifignSGtERENbSUlJV0tLSVdLS0lXTU1LWC4u
        LjgBAQEFBAQ2ExYTpKQbFsryMS6Rupqas+asrMjyZGK58iAbyPk7N7L0qai88tvc3PLi49/y5+jg8u3u
        5fKQkY2RBQUFBQ0NPiArJ7bYHhi//x8auP9LSKT/WFWv/yMeuf8aFbz/Liuw/6uqy//k5On/7O3r//T0
        7f/8/fT/nJyYlwYGBgQEBAoFLy6CbzQvv/AeGLP/Hxmx/x8Zsf8cF7P/JyOm/2xrr//ExNj/2tri/+Tl
        5f/u7+n/+vrx/5ycmJcHBwcEAAAAAAcIEgcpJ3N3Kias9iwlv/8uJ8D/Kyaq/1RTlv+urtD/ysre/9jZ
        4v/k5eb/7u7p//f47/+cnJiXCAgIBAAAAAADAg0IIyB8e0A6xvdHQM3/S0TN/0xGxv9cWKb/mJi3/8TE
        1//U1N3/3+Dh/+nq5f/09e3/nJ2ZlwgICAQDAxQKJSF9d0tE0PJWT9T/RUCu/1BLwf9nYdj/ZmDS/25q
        r/+trcH/1NTc/97e3//n6OP/8PHp/5ubl5cICAgECglMIEU/ytVgWdz/UEy5/19dmv95eMn/bWnd/4B6
        4f9taMv/pKTC/9bW2//e397/5eXg/+jp4P+YmJSXCgoKBAQEEwU2M45qU07G5mZkm/irq8j/razP/5CP
        3f95dtr/hIO+/8TE0P/V1dj/2tvZ/9zd1v/b3NT/k5SRlwsKCgQAAAAACgoWB0REb1Camp/ewcHQ/76+
        0f+9vNP/sLDS/8PD0P/S0tb/1tbW/9bW0//R0sz/zc7H/4+PjJcLCwwEAAAAAAAAAABISUY7qqun7snJ
        0P/JydL/yMjQ/8vM0f/P0NL/0tLS/9DRzv/Ky8b/w8S9/76/uP+KioeXDAwMBAAAAAAGBgYAbm5scqys
        p/zPz8//0tPU/9HS0v/S1NL/1NXS/9HSz//JycX/wsO9/7m5s/+vsKr/hIWCkw0NDQQAAAAAEBAQCJOT
        j6etraf/1NTP/9jZ1P/W19L/1dbQ/9HSy//HyML/1dXP//Hy6//j5N7/uLm01VdXVj4GBgYAAAAAACUl
        JRaen5rJsLCp/9XWzv/Z2tL/1tbO/9DRyP/HyMD/vL21/9LTzP/y8+3/ubq2z05PTT0KCgoAAAAAAAAA
        AAANDQ0EYmJhU6eootrV1s792NnQ/9LTyv/IycD/vb62/6+wqf/JycT+vb26yTo6ODcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAgICAVXV1ZKzs7I7s7PyP/Hx8D/vr+4/7S1r/+pqqT/q6un1EREQjgAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AADAAwAA4AMAAPADAADwAwAA4AMAAMADAADwAwAA8AMAAPADAADwAwAA4AcAAOAP
        AAD4PwAA+D8AAA==
</value>
  </data>
</root>